function varargout = avalonGui(varargin)
% AVALONGUI M-file for avalonGui.fig
%      AVALONGUI, by itself, creates a new AVALONGUI or raises the existing
%      singleton*.
%
%      H = AVALONGUI returns the handle to a new AVALONGUI or the handle to
%      the existing singleton*.
%
%      AVALONGUI('CALLBACK',hObject,eventData,handles,...) calls the local
%      function named CALLBACK in AVALONGUI.M with the given input arguments.
%
%      AVALONGUI('Property','Value',...) creates a new AVALONGUI or raises the
%      existing singleton*.  Starting from the left, property value pairs are
%      applied to the GUI before avalonGui_OpeningFcn gets called.  An
%      unrecognized property name or invalid value makes property application
%      stop.  All inputs are passed to avalonGui_OpeningFcn via varargin.
%
%      *See GUI Options on GUIDE's Tools menu.  Choose "GUI allows only one
%      instance to run (singleton)".
%
% See also: GUIDE, GUIDATA, GUIHANDLES

% Edit the above text to modify the response to help avalonGui

% Last Modified by GUIDE v2.5 08-Nov-2009 17:30:36

% Begin initialization code - DO NOT EDIT
gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
                   'gui_Singleton',  gui_Singleton, ...
                   'gui_OpeningFcn', @avalonGui_OpeningFcn, ...
                   'gui_OutputFcn',  @avalonGui_OutputFcn, ...
                   'gui_LayoutFcn',  [] , ...
                   'gui_Callback',   []);
if nargin && ischar(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end
% End initialization code - DO NOT EDIT


% --- Executes just before avalonGui is made visible.
function avalonGui_OpeningFcn(hObject, eventdata, handles, varargin)
% This function has no output args, see OutputFcn.
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% varargin   command line arguments to avalonGui (see VARARGIN)
% Clear console
clc;
% Choose default command line output for avalonGui
handles.output = hObject;

global Stop;
Stop = 0;
world_size=50;
% Init figures

% Position
xlabel(handles.AxesPose,'x [m]');
ylabel(handles.AxesPose,'y [m]');
title(handles.AxesPose,'Boat Position');
grid(handles.AxesPose,'on');
axis(handles.AxesPose,'equal');

% Trajectory
xlabel(handles.AxesTrajectory,'x [m]');
ylabel(handles.AxesTrajectory,'y [m]');
title(handles.AxesTrajectory,'Trajectory');
grid(handles.AxesTrajectory,'on');
% axis(handles.AxesTrajectory,[-world_size/2 world_size/2 -world_size/2 world_size/2]);


% Forces
xlabel(handles.AxesForce,'t [sec]');
ylabel(handles.AxesForce,'Force (N)');
% title(handles.AxesForce,'Total Forces');
grid(handles.AxesForce,'on');
axis(handles.AxesForce,'equal');

% Velocity
xlabel(handles.AxesVelocity,'t [sec]');
ylabel(handles.AxesVelocity,'Velocity [m/s]');
% title(handles.AxesVelocity,'Velocity');
grid(handles.AxesVelocity,'on');
axis(handles.AxesVelocity,'equal');

% Update handles structure
guidata(hObject, handles);

% UIWAIT makes avalonGui wait for user response (see UIRESUME)
% uiwait(handles.figure1);


% --- Outputs from this function are returned to the command line.
function varargout = avalonGui_OutputFcn(hObject, eventdata, handles) 
% varargout  cell array for returning output args (see VARARGOUT);
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Get default command line output from handles structure
varargout{1} = handles.output;


% --- Executes on button press in simulate_pushbutton.
function simulate_pushbutton_Callback(hObject, eventdata, handles)
% hObject    handle to simulate_pushbutton (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
global d_wind;
global v_wind
% global alpha_rudder;
% global aoa_sail;
global Stop;
Stop = 0;

% Clear figures
cla(handles.AxesPose);
cla(handles.AxesTrajectory);
cla(handles.AxesForce);
cla(handles.AxesVelocity);

d_wind = deg2rad(str2double(get(handles.wind_angle,'String')));
v_wind = str2double(get(handles.wind_speed,'String'));
% alpha_rudder = deg2rad(str2double(get(handles.rudder_angle,'String')));
% aoa_sail = deg2rad(str2double(get(handles.sail_angle,'String')));

%% run simulation
simulationOne;


% --- Executes on button press in stop_pushbutton.
function stop_pushbutton_Callback(hObject, eventdata, handles)
% hObject    handle to stop_pushbutton (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
global Stop

Stop = 1;
disp('avalon stop cmd');
T_sim = str2double(get(handles.t_sim,'String'))
% Update handles structure
guidata(hObject, handles);


function sail_angle_Callback(hObject, eventdata, handles)
% hObject    handle to sail_angle (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of sail_angle as text
%        str2double(get(hObject,'String')) returns contents of sail_angle as a double
d_sailValue = str2double(get(hObject,'String'));
% Update handles structure
guidata(hObject, handles);

% --- Executes during object creation, after setting all properties.
function sail_angle_CreateFcn(hObject, eventdata, handles)
% hObject    handle to sail_angle (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function rudder_angle_Callback(hObject, eventdata, handles)
% hObject    handle to rudder_angle (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of rudder_angle as text
%        str2double(get(hObject,'String')) returns contents of rudder_angle as a double
d_rudderValue = str2double(get(hObject,'String'));
% Update handles structure
guidata(hObject, handles);

% --- Executes during object creation, after setting all properties.
function rudder_angle_CreateFcn(hObject, eventdata, handles)
% hObject    handle to rudder_angle (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function wind_speed_Callback(hObject, eventdata, handles)
% hObject    handle to wind_speed (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of wind_speed as text
%        str2double(get(hObject,'String')) returns contents of wind_speed as a double
v_windValue = str2double(get(hObject,'String'));
% Update handles structure
guidata(hObject, handles);

% --- Executes during object creation, after setting all properties.
function wind_speed_CreateFcn(hObject, eventdata, handles)
% hObject    handle to wind_speed (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function wind_angle_Callback(hObject, eventdata, handles)
% hObject    handle to wind_angle (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of wind_angle as text
%        str2double(get(hObject,'String')) returns contents of wind_angle as a double
d_windValue = str2double(get(hObject,'String'));
% Update handles structure
guidata(hObject, handles);

% --- Executes during object creation, after setting all properties.
function wind_angle_CreateFcn(hObject, eventdata, handles)
% hObject    handle to wind_angle (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end



function t_sim_Callback(hObject, eventdata, handles)
% hObject    handle to t_sim (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of t_sim as text
%        str2double(get(hObject,'String')) returns contents of t_sim as a double



% --- Executes during object creation, after setting all properties.
function t_sim_CreateFcn(hObject, eventdata, handles)
% hObject    handle to t_sim (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


